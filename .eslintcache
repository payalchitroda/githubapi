[{"D:\\githubapi\\src\\index.js":"1","D:\\githubapi\\src\\App.js":"2","D:\\githubapi\\src\\reportWebVitals.js":"3","D:\\githubapi\\src\\home.js":"4","D:\\githubapi\\src\\profile.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":154,"mtime":1610431664817,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":8357,"mtime":1610546149579,"results":"10","hashOfConfig":"7"},{"size":621,"mtime":1610546181175,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"4umncn",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\githubapi\\src\\index.js",[],["24","25"],"D:\\githubapi\\src\\App.js",[],"D:\\githubapi\\src\\reportWebVitals.js",[],"D:\\githubapi\\src\\home.js",["26","27","28","29","30","31","32","33","34"],"import React from 'react';\r\nimport './home.css';\r\nimport Profile from './profile.js';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user1: {\r\n                img: \"https://payalchitroda.github.io/githubapi/default-avatar.png\",\r\n                name: \"\",\r\n                public_repos: \"\",\r\n                message: \"\",\r\n                followers: \"\",\r\n                following: \"\",\r\n                repositories: [],\r\n                pullrequest: 0,\r\n                commits: 0,\r\n\r\n\r\n            },\r\n            user2: {\r\n                img: \"https://payalchitroda.github.io/githubapi/default-avatar.png\",\r\n                name: \"\",\r\n                public_repos: \"\",\r\n                message: \"\",\r\n                followers: \"\",\r\n                following: \"\",\r\n                repositories: [],\r\n                pullrequest: 0,\r\n                commits: 0,\r\n\r\n\r\n            },\r\n        };\r\n\r\n    }\r\n    resetUser1 = (flag) => {\r\n        var user1 = this.state.user1;\r\n        user1 = {\r\n            message: flag ? \"\" : \"user does not exist\",\r\n            img: \"https://payalchitroda.github.io/githubapi/default-avatar.png\",\r\n            name: \"\",\r\n            public_repos: \"\",\r\n            followers: \"\",\r\n            following: \"\",\r\n            repositories: [],\r\n            pullrequest: 0,\r\n            commits: 0\r\n        }\r\n        this.setState({ user1: user1 });\r\n\r\n    }\r\n    resetUser2 = (flag) => {\r\n        var user2 = this.state.user2;\r\n        user2 = {\r\n            message: flag ? \"\" : \"user does not exist\",\r\n            img: \"https://payalchitroda.github.io/githubapi/default-avatar.png\",\r\n            name: \"\",\r\n            public_repos: \"\",\r\n            followers: \"\",\r\n            following: \"\",\r\n            repositories: [],\r\n            pullrequest: 0,\r\n            commits: 0\r\n        }\r\n        this.setState({ user2: user2 });\r\n\r\n    }\r\n    getRepositories = (username, id) => {\r\n\r\n        fetch('https://api.github.com/users/' + username + '/repos')\r\n            .then((response) => {\r\n\r\n                return response.json();\r\n            }).then((data) => {\r\n                var user = id == 0 ? this.state.user1 : this.state.user2\r\n\r\n                data.map((repo) => {\r\n                    user.repositories.push(repo.name)\r\n                    this.getPullRequest(username, repo.name, id)\r\n                    this.getCommits(username, repo.name, id)\r\n                })\r\n\r\n                id == 0 ? this.setState({ user1: user }) : this.setState({ user2: user })\r\n\r\n\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n    getPullRequest = (username, repo, id) => {\r\n        var user = id == 0 ? this.state.user1 : this.state.user2;\r\n        fetch('https://api.github.com/repos/' + username + '/' + repo + '/pulls')\r\n            .then((response) => {\r\n                return response.json();\r\n            }).then((data) => {\r\n                //console.log(\"pull request\"+data)\r\n                user.pullrequest += data.length;\r\n                id == 0 ? this.setState({ user1: user }) : this.setState({ user2: user })\r\n\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n    getCommits = (username, repo, id) => {\r\n        var user = id == 0 ? this.state.user1 : this.state.user2;\r\n        fetch('https://api.github.com/repos/' + username + '/' + repo + '/stats/participation')\r\n            .then((response) => {\r\n                return response.json();\r\n            }).then((data) => {\r\n                console.log(repo)\r\n                console.log(data)\r\n                user.commits += data.owner[51]\r\n                id == 0 ? this.setState({ user1: user }) : this.setState({ user2: user })\r\n\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    checkRateLimit = () => {\r\n        fetch('https://api.github.com/rate_limit')\r\n            .then((response) => {\r\n                return response.json();\r\n            }).then((data) => {\r\n                console.log(data)\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    stats = () => {\r\n\r\n        if (this.refs.user1.value && this.refs.user2.value) {\r\n            this.resetUser1(true)\r\n            this.resetUser2(true)\r\n            Promise.all([\r\n                fetch('https://api.github.com/users/' + this.refs.user1.value),\r\n                fetch('https://api.github.com/users/' + this.refs.user2.value)\r\n            ]).then((responses) => {\r\n                return Promise.all(responses.map((response) => {\r\n                    return response.json();\r\n                }));\r\n            }).then((data) => {\r\n                var user1 = this.state.user1;\r\n                var user2 = this.state.user2;\r\n\r\n                if (data[0].message && data[1].message) {\r\n                    this.resetUser1(false)\r\n                    this.resetUser2(false)\r\n                }\r\n                else if (data[0].message) {\r\n                    this.resetUser1(false)\r\n                    this.getRepositories(this.refs.user2.value, 1)\r\n                    user2.img = data[1].avatar_url;\r\n                    user2.name = data[1].name;\r\n                    user2.public_repos = data[1].public_repos;\r\n                    user2.message = \"\";\r\n                    user2.followers = data[1].followers\r\n                    user2.following = data[1].following\r\n                }\r\n                else if (data[1].message) {\r\n                    this.resetUser2(false)\r\n                    this.getRepositories(this.refs.user1.value, 0)\r\n                    user1.img = data[0].avatar_url;\r\n                    user1.name = data[0].name;\r\n                    user1.public_repos = data[0].public_repos;\r\n                    user1.message = \"\";\r\n                    user1.followers = data[0].followers\r\n                    user1.following = data[0].following\r\n\r\n                }\r\n                else {\r\n\r\n                    this.getRepositories(this.refs.user1.value, 0)\r\n                    this.getRepositories(this.refs.user2.value, 1)\r\n                    user1.img = data[0].avatar_url;\r\n                    user1.name = data[0].name;\r\n                    user1.public_repos = data[0].public_repos;\r\n                    user1.message = \"\";\r\n                    user1.followers = data[0].followers\r\n                    user1.following = data[0].following\r\n\r\n\r\n                    user2.img = data[1].avatar_url;\r\n                    user2.name = data[1].name;\r\n                    user2.public_repos = data[1].public_repos;\r\n                    user2.message = \"\";\r\n                    user2.followers = data[1].followers\r\n                    user2.following = data[1].following\r\n\r\n\r\n\r\n\r\n                }\r\n                this.setState({ user1: user1, user2: user2 });\r\n\r\n                // console.log(data);\r\n\r\n\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n        }\r\n        else {\r\n            alert(\"Enter all fields\")\r\n        }\r\n        console.log(this.state.user1)\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"left\">\r\n                    {/* <img src={this.state.user1.img} /> */}\r\n                    <img src={this.state.user1.img} />\r\n\r\n                    <br />   <br />\r\n\r\n                UserName:<input ref=\"user1\" type=\"text\" name=\"user1\" /><br />\r\n                    {this.state.user1.message}<br />\r\n\r\n                    <Profile user={this.state.user1} />\r\n\r\n                </div>\r\n                <div className='middle'>\r\n                    <button onClick={() => this.stats()}>Get stats</button>\r\n                    <button onClick={() => this.checkRateLimit()}>check rate limit</button>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <img src={this.state.user2.img} />\r\n                    <br />   <br />\r\n             UserName:<input ref=\"user2\" type=\"text\" name=\"user2\" /><br />\r\n\r\n                    {this.state.user2.message}<br />\r\n                    <Profile user={this.state.user2} />\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","D:\\githubapi\\src\\profile.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":78,"column":31,"nodeType":"41","messageId":"42","endLine":78,"endColumn":33},{"ruleId":"43","severity":1,"message":"44","line":80,"column":33,"nodeType":"45","messageId":"46","endLine":80,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":86,"column":20,"nodeType":"41","messageId":"42","endLine":86,"endColumn":22},{"ruleId":"39","severity":1,"message":"40","line":95,"column":23,"nodeType":"41","messageId":"42","endLine":95,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":102,"column":20,"nodeType":"41","messageId":"42","endLine":102,"endColumn":22},{"ruleId":"39","severity":1,"message":"40","line":110,"column":23,"nodeType":"41","messageId":"42","endLine":110,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":118,"column":20,"nodeType":"41","messageId":"42","endLine":118,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":222,"column":21,"nodeType":"49","endLine":222,"endColumn":55},{"ruleId":"47","severity":1,"message":"48","line":237,"column":21,"nodeType":"49","endLine":237,"endColumn":55},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]